# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- api

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  dotnetSdkVersion: '7.x'
  Parameters.RestoreBuildProjects: '**/Ebd.Presentation.Api.csproj'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    packageType: sdk
    version: '$(dotnetSdkVersion)'
    installationPath: $(Agent.ToolsDirectory)/dotnet  

- task: DotNetCoreCLI@2 # Restore the project
  displayName: Restore
  inputs:
    command: restore
    projects: '$(Parameters.RestoreBuildProjects)'

- task: DotNetCoreCLI@2 # Build the project
  displayName: Build
  inputs:
    projects: '$(Parameters.RestoreBuildProjects)'
    arguments: '--configuration $(BuildConfiguration) --no-restore'
    
# - task: DotNetCoreCLI@2 # This task for test
#   displayName: Test
#   inputs:
#     command: test
#     projects: '$(Parameters.TestProjects)'
#     arguments: '--configuration $(BuildConfiguration)'
#   enabled: false # Not enabled coz the project does not have a test

- task: DotNetCoreCLI@2
  displayName: 'Publish files'
  inputs:
    command: 'publish'
    projects: '$(Parameters.RestoreBuildProjects)'
    publishWebProjects: false
    zipAfterPublish: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) --no-build'

# - task: CopyFiles@2
#   displayName: 'Copy Files to -> $(Build.ArtifactStagingDirectory)'
#   inputs:
#     SourceFolder: '$(Build.SourcesDirectory)'
#     Contents: '**'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts $(Build.BuildNumber) $(Build.ArtifactStagingDirectory)'
  # inputs:
    #PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    # ArtifactName: '$(Parameters.ArtifactName)'
#    ArtifactName: 'drop'
    # publishLocation: 'Container'
  condition: succeeded()

- task: AzureRmWebAppDeployment@4
  displayName: Deploy on admp.azurewebsites.net
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'GTech(1)(b42a60f5-3c02-4a26-851c-36d2273fb56a)'
    appType: 'webApp'
    WebAppName: 'admp'
    packageForLinux: '$(System.ArtifactStagingDirectory)'
    StartupCommand: 'dotnet Ebd.Presentation.Api.dll'
  condition: succeeded()

# THIS IS TO PUBLISH ON AZURE APP SERVICE
# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectionType: 'AzureRM'
#     azureSubscription: 'GTech(b42a60f5-3c02-4a26-851c-36d2273fb56a)'
#     appType: 'webAppLinux'
#     WebAppName: 'EscolaBiblicaDominical'
#     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
#     StartupCommand: 'dotnet Ebd.Presentation.Api.dll'

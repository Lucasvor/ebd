// <auto-generated />
using System;
using Ebd.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ebd.Infra.Data.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsavelId")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("AlunoId");

                    b.HasIndex("PessoaId");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Bairro", b =>
                {
                    b.Property<int>("BairroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("BairroId");

                    b.HasIndex("Nome");

                    b.ToTable("Bairro");

                    b.HasData(
                        new
                        {
                            BairroId = 1,
                            Nome = "Aclimação"
                        },
                        new
                        {
                            BairroId = 2,
                            Nome = "Aeroporto"
                        },
                        new
                        {
                            BairroId = 3,
                            Nome = "Alto Umuarama"
                        },
                        new
                        {
                            BairroId = 4,
                            Nome = "Aruanan"
                        },
                        new
                        {
                            BairroId = 5,
                            Nome = "Bela Vista"
                        },
                        new
                        {
                            BairroId = 6,
                            Nome = "Bom Jesus"
                        },
                        new
                        {
                            BairroId = 7,
                            Nome = "Brasil"
                        },
                        new
                        {
                            BairroId = 8,
                            Nome = "Buritis"
                        },
                        new
                        {
                            BairroId = 9,
                            Nome = "Carajás"
                        },
                        new
                        {
                            BairroId = 10,
                            Nome = "Cazeca"
                        },
                        new
                        {
                            BairroId = 11,
                            Nome = "Centro"
                        },
                        new
                        {
                            BairroId = 12,
                            Nome = "Chácara Tubalina"
                        },
                        new
                        {
                            BairroId = 13,
                            Nome = "Chácaras Bonanza"
                        },
                        new
                        {
                            BairroId = 14,
                            Nome = "Chácaras Tubalina E Quartel"
                        },
                        new
                        {
                            BairroId = 15,
                            Nome = "Chaves"
                        },
                        new
                        {
                            BairroId = 16,
                            Nome = "Chs Tubalina E Quartel"
                        },
                        new
                        {
                            BairroId = 17,
                            Nome = "Chs Uirapuru"
                        },
                        new
                        {
                            BairroId = 18,
                            Nome = "Cidade Jardim"
                        },
                        new
                        {
                            BairroId = 19,
                            Nome = "Conjunto Alvorada"
                        },
                        new
                        {
                            BairroId = 20,
                            Nome = "Custódio Pereira"
                        },
                        new
                        {
                            BairroId = 21,
                            Nome = "Daniel Fonseca"
                        },
                        new
                        {
                            BairroId = 22,
                            Nome = "Distrito Industrial"
                        },
                        new
                        {
                            BairroId = 23,
                            Nome = "Dom Almir"
                        },
                        new
                        {
                            BairroId = 24,
                            Nome = "Dona Zulmira"
                        },
                        new
                        {
                            BairroId = 25,
                            Nome = "Fundinho"
                        },
                        new
                        {
                            BairroId = 26,
                            Nome = "General Osório"
                        },
                        new
                        {
                            BairroId = 27,
                            Nome = "Granada"
                        },
                        new
                        {
                            BairroId = 28,
                            Nome = "Guarani"
                        },
                        new
                        {
                            BairroId = 29,
                            Nome = "Higino Guerra"
                        },
                        new
                        {
                            BairroId = 30,
                            Nome = "Industrial"
                        },
                        new
                        {
                            BairroId = 31,
                            Nome = "Jaraguá"
                        },
                        new
                        {
                            BairroId = 32,
                            Nome = "Jardim Botânico"
                        },
                        new
                        {
                            BairroId = 33,
                            Nome = "Jardim Brasília"
                        },
                        new
                        {
                            BairroId = 34,
                            Nome = "Jardim Califórnia"
                        },
                        new
                        {
                            BairroId = 35,
                            Nome = "Jardim Canaã"
                        },
                        new
                        {
                            BairroId = 36,
                            Nome = "Jardim Colina"
                        },
                        new
                        {
                            BairroId = 37,
                            Nome = "Jardim das Palmeiras"
                        },
                        new
                        {
                            BairroId = 38,
                            Nome = "Jardim Europa"
                        },
                        new
                        {
                            BairroId = 39,
                            Nome = "Jardim Finotti"
                        },
                        new
                        {
                            BairroId = 40,
                            Nome = "Jardim Holanda"
                        },
                        new
                        {
                            BairroId = 41,
                            Nome = "Jardim Inconfidência"
                        },
                        new
                        {
                            BairroId = 42,
                            Nome = "Jardim Ipanema"
                        },
                        new
                        {
                            BairroId = 43,
                            Nome = "Jardim Karaiba"
                        },
                        new
                        {
                            BairroId = 44,
                            Nome = "Jardim Panorama"
                        },
                        new
                        {
                            BairroId = 45,
                            Nome = "Jardim Patrícia"
                        },
                        new
                        {
                            BairroId = 46,
                            Nome = "Jardim Umuarama"
                        },
                        new
                        {
                            BairroId = 47,
                            Nome = "Jockey Camping"
                        },
                        new
                        {
                            BairroId = 48,
                            Nome = "Lagoinha"
                        },
                        new
                        {
                            BairroId = 49,
                            Nome = "Laranjeiras"
                        },
                        new
                        {
                            BairroId = 50,
                            Nome = "Lidice"
                        },
                        new
                        {
                            BairroId = 51,
                            Nome = "Loteamento Integração"
                        },
                        new
                        {
                            BairroId = 52,
                            Nome = "Lourdes"
                        },
                        new
                        {
                            BairroId = 53,
                            Nome = "Luizote de Freitas"
                        },
                        new
                        {
                            BairroId = 54,
                            Nome = "Luizote Freitas"
                        },
                        new
                        {
                            BairroId = 55,
                            Nome = "Mansões Aeroporto"
                        },
                        new
                        {
                            BairroId = 56,
                            Nome = "Mansour"
                        },
                        new
                        {
                            BairroId = 57,
                            Nome = "Maravilha"
                        },
                        new
                        {
                            BairroId = 58,
                            Nome = "Maria Rezende"
                        },
                        new
                        {
                            BairroId = 59,
                            Nome = "Marta Helena"
                        },
                        new
                        {
                            BairroId = 60,
                            Nome = "Martins"
                        },
                        new
                        {
                            BairroId = 61,
                            Nome = "Matins"
                        },
                        new
                        {
                            BairroId = 62,
                            Nome = "Mercês"
                        },
                        new
                        {
                            BairroId = 63,
                            Nome = "Minas Brasil"
                        },
                        new
                        {
                            BairroId = 64,
                            Nome = "Minas Gerais"
                        },
                        new
                        {
                            BairroId = 65,
                            Nome = "Morada Colina"
                        },
                        new
                        {
                            BairroId = 66,
                            Nome = "Morada da Colina"
                        },
                        new
                        {
                            BairroId = 67,
                            Nome = "Morada dos Pássaros"
                        },
                        new
                        {
                            BairroId = 68,
                            Nome = "Morada Nova"
                        },
                        new
                        {
                            BairroId = 69,
                            Nome = "Morada Nova Ii"
                        },
                        new
                        {
                            BairroId = 70,
                            Nome = "Morumbi"
                        },
                        new
                        {
                            BairroId = 71,
                            Nome = "Nossa Senhora Aparecida"
                        },
                        new
                        {
                            BairroId = 72,
                            Nome = "Nossa Senhora das Graças"
                        },
                        new
                        {
                            BairroId = 73,
                            Nome = "Nossa Sra Graças"
                        },
                        new
                        {
                            BairroId = 74,
                            Nome = "Nosso Recanto"
                        },
                        new
                        {
                            BairroId = 76,
                            Nome = "Nova Uberlândia"
                        },
                        new
                        {
                            BairroId = 77,
                            Nome = "Novo Mundo"
                        },
                        new
                        {
                            BairroId = 78,
                            Nome = "Osvaldo Resende"
                        },
                        new
                        {
                            BairroId = 79,
                            Nome = "Osvaldo Rezende"
                        },
                        new
                        {
                            BairroId = 80,
                            Nome = "Pacaembu"
                        },
                        new
                        {
                            BairroId = 81,
                            Nome = "Pampulha"
                        },
                        new
                        {
                            BairroId = 82,
                            Nome = "Panorama"
                        },
                        new
                        {
                            BairroId = 83,
                            Nome = "Parque Américas"
                        },
                        new
                        {
                            BairroId = 84,
                            Nome = "Parque das Américas"
                        },
                        new
                        {
                            BairroId = 85,
                            Nome = "Patrimônio"
                        },
                        new
                        {
                            BairroId = 86,
                            Nome = "Planalto"
                        },
                        new
                        {
                            BairroId = 87,
                            Nome = "Presidente Roosevelt"
                        },
                        new
                        {
                            BairroId = 88,
                            Nome = "Progresso"
                        },
                        new
                        {
                            BairroId = 89,
                            Nome = "Prosperidade"
                        },
                        new
                        {
                            BairroId = 90,
                            Nome = "Residencial Gramado"
                        },
                        new
                        {
                            BairroId = 91,
                            Nome = "Residencial Nosso Lar"
                        },
                        new
                        {
                            BairroId = 92,
                            Nome = "Residencial Viviane"
                        },
                        new
                        {
                            BairroId = 93,
                            Nome = "Rezende"
                        },
                        new
                        {
                            BairroId = 94,
                            Nome = "Rezende Junqueira"
                        },
                        new
                        {
                            BairroId = 95,
                            Nome = "Santa Luzia"
                        },
                        new
                        {
                            BairroId = 96,
                            Nome = "Santa Maria"
                        },
                        new
                        {
                            BairroId = 97,
                            Nome = "Santa Mônica"
                        },
                        new
                        {
                            BairroId = 98,
                            Nome = "Santa Rosa"
                        },
                        new
                        {
                            BairroId = 99,
                            Nome = "São Jorge"
                        },
                        new
                        {
                            BairroId = 100,
                            Nome = "São José"
                        },
                        new
                        {
                            BairroId = 101,
                            Nome = "Saraiva"
                        },
                        new
                        {
                            BairroId = 102,
                            Nome = "Segismundo Pereira"
                        },
                        new
                        {
                            BairroId = 103,
                            Nome = "Setor Bom Jesus"
                        },
                        new
                        {
                            BairroId = 104,
                            Nome = "Shopping Park"
                        },
                        new
                        {
                            BairroId = 105,
                            Nome = "Tabajaras"
                        },
                        new
                        {
                            BairroId = 106,
                            Nome = "Taiaman"
                        },
                        new
                        {
                            BairroId = 107,
                            Nome = "Tancredo Neves"
                        },
                        new
                        {
                            BairroId = 108,
                            Nome = "Thomas Carmelo"
                        },
                        new
                        {
                            BairroId = 109,
                            Nome = "Tibery"
                        },
                        new
                        {
                            BairroId = 110,
                            Nome = "Tocantins"
                        },
                        new
                        {
                            BairroId = 111,
                            Nome = "Tubalina"
                        },
                        new
                        {
                            BairroId = 112,
                            Nome = "Umuarama"
                        },
                        new
                        {
                            BairroId = 113,
                            Nome = "Valparaíso"
                        },
                        new
                        {
                            BairroId = 114,
                            Nome = "Vigilato Pereira"
                        },
                        new
                        {
                            BairroId = 115,
                            Nome = "Vila Oswaldo"
                        },
                        new
                        {
                            BairroId = 116,
                            Nome = "Vila Povoa"
                        },
                        new
                        {
                            BairroId = 117,
                            Nome = "Vila Satélite"
                        });
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Chamada", b =>
                {
                    b.Property<int>("ChamadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstavaPresente")
                        .HasColumnType("bit");

                    b.Property<int>("LicaoId")
                        .HasColumnType("int");

                    b.HasKey("ChamadaId");

                    b.HasIndex("AlunoId");

                    b.HasIndex("LicaoId");

                    b.ToTable("Chamada");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Contato", b =>
                {
                    b.Property<int>("ContatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Classificacao")
                        .HasColumnType("int");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ContatoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BairroId")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Classificacao")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("EnderecoId");

                    b.HasIndex("BairroId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Licao", b =>
                {
                    b.Property<int>("LicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RevistaId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("LicaoId");

                    b.HasIndex("RevistaId");

                    b.ToTable("Licao");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("NascidoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("WhatsappIgualCelular")
                        .HasColumnType("bit");

                    b.HasKey("PessoaId");

                    b.HasIndex("Nome");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Professor", b =>
                {
                    b.Property<int>("ProfessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("ProfessorId");

                    b.HasIndex("PessoaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Revista", b =>
                {
                    b.Property<int>("RevistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Sumario")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Trimestre")
                        .HasColumnType("int");

                    b.HasKey("RevistaId");

                    b.HasIndex("Ano", "Trimestre");

                    b.ToTable("Revista");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Turma", b =>
                {
                    b.Property<int>("TurmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdadeMaxima")
                        .HasColumnType("int");

                    b.Property<int>("IdadeMinima")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("TurmaId");

                    b.ToTable("Turma");

                    b.HasData(
                        new
                        {
                            TurmaId = 1,
                            IdadeMaxima = 12,
                            IdadeMinima = 11,
                            Nome = "Mensageiros da Fé"
                        },
                        new
                        {
                            TurmaId = 2,
                            IdadeMaxima = 14,
                            IdadeMinima = 13,
                            Nome = "Adolescentes Vencedores"
                        },
                        new
                        {
                            TurmaId = 3,
                            IdadeMaxima = 17,
                            IdadeMinima = 15,
                            Nome = "Campeões da Fé"
                        });
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Aluno", b =>
                {
                    b.HasOne("Ebd.Domain.Core.Entities.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ebd.Domain.Core.Entities.Pessoa", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId");

                    b.HasOne("Ebd.Domain.Core.Entities.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("Responsavel");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Chamada", b =>
                {
                    b.HasOne("Ebd.Domain.Core.Entities.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ebd.Domain.Core.Entities.Licao", "Licao")
                        .WithMany()
                        .HasForeignKey("LicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Licao");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Contato", b =>
                {
                    b.HasOne("Ebd.Domain.Core.Entities.Pessoa", "Pessoa")
                        .WithMany("Contatos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Endereco", b =>
                {
                    b.HasOne("Ebd.Domain.Core.Entities.Bairro", "Bairro")
                        .WithMany()
                        .HasForeignKey("BairroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ebd.Domain.Core.Entities.Pessoa", "Pessoa")
                        .WithMany("Enderecos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bairro");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Licao", b =>
                {
                    b.HasOne("Ebd.Domain.Core.Entities.Revista", "Revista")
                        .WithMany("Licoes")
                        .HasForeignKey("RevistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Revista");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Professor", b =>
                {
                    b.HasOne("Ebd.Domain.Core.Entities.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ebd.Domain.Core.Entities.Turma", "Turma")
                        .WithMany("Professores")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Pessoa", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Revista", b =>
                {
                    b.Navigation("Licoes");
                });

            modelBuilder.Entity("Ebd.Domain.Core.Entities.Turma", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Professores");
                });
#pragma warning restore 612, 618
        }
    }
}
